
 force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();

  var link = svg.selectAll(".link")
      .data(graph.links)
      .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); })
      .style("stroke", function(d) {
        if(d.source.name.split(' ')[0].replace(/SCR_0*/g, '') == master_id || 
          d.target.name.split(' ')[0].replace(/SCR_0*/g, '') == master_id) {
          return 'black'
        }
      })

  var gnodes = svg.selectAll('g.gnode')
     .data(graph.nodes)
     .enter()
     .append('g')
     .classed('gnode', true); 
      
  var node = gnodes.append("circle")
      .attr("class", "node")
      .attr("r", function(d) { return d.value*8; } )
      .style("fill", function(d) {
        if(d.name.split(' ')[0].replace(/SCR_0*/g, '') == master_id) {
          return 'black'
        }
        return color[d.group];
      })
      .call(force.drag)
      // .on('click', function(e){
      //  pid=e.name.split(' ')[0].replace(/SCR_0*/g, '')
      //  window.location=pid+'_main.html';
      // })

  var labels = gnodes.append("text")
      .attr("text-anchor", "middle")
      .style('font-weight', function(e){return 'bolder'})
      .style('stroke', function(d){
        if(d.name.split(' ')[0].replace(/SCR_0*/g, '') == master_id) {
          return 'red'
        }
      })
      .style('fill', function(d){
        if(d.name.split(' ')[0].replace(/SCR_0*/g, '') == master_id) {
          return 'red'
        }
      })
      .text(function(d) { return d.name.split(' ').slice(0, 1) })
      .on('click', function(e){
        pid=e.name.split(' ')[0].replace(/SCR_0*/g, '')
        window.top.location.href = pid+'_main.html'
        // window.open(pid+'_main.html', "_blank");
      })
  labels.append("tspan")
    .attr("dy", "1.1em") // offest by 1.2 em
    .attr("x",0)
    .text(function(d) {return d.name.split(' ').slice(1).join(' ');})
    .style('stroke', function(d){
      if(d.name.split(' ')[0].replace(/SCR_0*/g, '') == master_id) {
        return 'red'
      }
    })
      

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    //node.attr("cx", function(d) { return d.x; })
        //.attr("cy", function(d) { return d.y; });
        
    // Translate the groups
    gnodes.attr("transform", function(d) { 
        return 'translate(' + [d.x, d.y] + ')'; 
    });
    
  });
//});


</script>